<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">



<mvc:default-servlet-handler/>
<!--    <mvc:resources mapping="/static/**" location="/static/"></mvc:resources>-->

<!--    1.配置要扫描的controller得包-->
    <context:component-scan base-package="com.fisheep.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

<!--    2.配置页面在哪里去找，既是视图解析器
          作用是controller里面如果返回的是String的话，会自动把那个String到/WEB-INF/views/目录下面
          来找string.jsp文件，然后返回这个文件-->
    <bean id="InternalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".html"></property>
    </bean>

<!--    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
<!--        <property name="maxUploadSizePerFile">-->
<!--            <value>52428800</value>-->
<!--        </property>-->
<!--    </bean>-->
    <mvc:annotation-driven/>

    <!-- 文件上传配置 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传的最大限制20MB -->
        <property name="maxUploadSize" value="20971520" />
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 上传文件的解析 -->
        <property name="resolveLazily" value="true" />
    </bean>



    <!-- 使用xml配置aop ,引入AOP的命名空间-->
    <bean id="logInterceptor" class="com.fisheep.log.LogInterceptor"></bean>
    <!-- 强制使用cglib代理，如果不设置，将默认使用jdk的代理，但是jdk的代理是基于接口的 -->
    <aop:config proxy-target-class="true" />
    <aop:config>
        <!--定义切面-->
        <aop:aspect id="logAspect" ref="logInterceptor">
            <!--定义切入点-->
            <aop:pointcut expression="execution(* com.fisheep.controller.*.*(..))"  id="logPointCut"/>
            <!--方法执行之前被调用执行的-->
            <!--<aop:before method="before" pointcut-ref="logPointCut"/>&lt;!&ndash;一个切入点的引用&ndash;&gt;-->
            <!--<aop:after method="after" pointcut-ref="logPointCut"/>&lt;!&ndash;一个切入点的引用&ndash;&gt;-->
            <!--<aop:after-throwing method="afterThrowing" pointcut-ref="logPointCut" />-->
            <!--<aop:after-returning method="afterReturn" pointcut-ref="logPointCut" />-->
            <aop:around method="around" pointcut-ref="logPointCut"/>
        </aop:aspect>
    </aop:config>


</beans>